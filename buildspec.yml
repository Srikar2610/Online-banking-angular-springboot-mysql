version: 0.2
 
env:
  variables:
    DB_USERNAME: admin
    DB_PASSWORD: adminSP12
    CLUSTER_NAME: my-cluster
    AWS_REGION: us-east-1
    AWS_ACCOUNT_ID: 026090550003
    IMAGE_NAME: online-banking
 
phases:
  install:
    commands:
      - echo Installing dependencies...
      - yum update -y
      - yum install -y unzip wget python3-pip gnupg tar java-17-openjdk-devel maven
      - pip3 install --upgrade awscli
      - curl -LO "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
      - chmod +x kubectl && mv kubectl /usr/local/bin/
      - echo Installing Trivy...
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      - echo "Trivy installed successfully."
 
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - export RDS_ENDPOINT=$(aws rds describe-db-instances --query "DBInstances[?DBName=='mydb'].Endpoint.Address" --output text --region $AWS_REGION)
      - echo "RDS_ENDPOINT=$RDS_ENDPOINT"
      - export IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME}:latest"
 
  build:
    commands:
      - echo Building Docker image...
      - docker build -t $IMAGE_NAME .
      - docker tag $IMAGE_NAME:latest $IMAGE_URI

      - echo Running SonarQube analysis...
      - mvn clean verify sonar:sonar -Dsonar.projectKey=Banking_project -Dsonar.host.url=http://44.201.251.160 -Dsonar.login=sqp_633f2e3604f9b388947efd00171621b0f326b389

      - echo Scanning image with Trivy...
      - mkdir -p trivy-reports
      - trivy image --severity HIGH,CRITICAL --exit-code 0 --format table -o trivy-reports/report.txt $IMAGE_NAME:latest || true
 
  post_build:
    commands:
      - echo Pushing Docker image to ECR...
      - docker push $IMAGE_URI
      - echo Preparing Kubernetes manifests...
      - mkdir -p k8s-out
      - sed "s|IMAGE_PLACEHOLDER|$IMAGE_URI|g" k8s/deployment.yaml > k8s-out/deployment.yaml
      - cp k8s/service.yaml k8s-out/service.yaml
      - echo Updating kubeconfig for EKS...
      - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
      - echo Applying Kubernetes manifests to EKS...
      - kubectl apply -f k8s-out/deployment.yaml -f k8s-out/service.yaml
      - echo Skipping rollout status check to avoid CodePipeline timeout
      - echo Pods:
      - kubectl get pods -o wide || true
      - echo Deployment Info:
      - kubectl describe deployment ${IMAGE_NAME} || true
      - echo Logs:
      - >
        for pod in $(kubectl get pods -l app=${IMAGE_NAME} -o name); do
          echo "--- Logs for $pod ---"
          kubectl logs $pod || true
        done
 
artifacts: 
  files:
    - k8s-out/deployment.yaml
    - k8s-out/service.yaml
    - trivy-reports/report.txt
  discard-paths: yes
